{"version":3,"sources":["script.js"],"names":["list","document","getElementById","searchInput","searchButton","yearsSelector","tagsSelector","globalData","yearsList","tagsList","fetchData","fetch","then","resp","json","data","map","raport","date","Date","forEach","element","year","getFullYear","push","Set","sort","a","b","innerHTML","strUser","options","selectedIndex","text","filterByYear","tag","category","index","addEventListener","filterByTag","value","renderData","filter","tagsSelected","checked","filterByChars","title","includes","description","output","time","minutesHour","getHours","getMinutes","dayMonthYear","getDate","getMonth","window","console","log","undefined"],"mappings":"sJAAA,IAAMA,KAAOC,SAASC,eAAe,QAC/BC,YAAcF,SAASC,eAAe,eACtCE,aAAeH,SAASC,eAAe,gBACvCG,cAAgBJ,SAASC,eAAe,SACxCI,aAAeL,SAASC,eAAe,QAEzCK,WAAa,GACbC,UAAY,GACZC,SAAW,GAIf,SAASC,YAELC,MAAM,aACDC,KAAK,SAASC,GACX,OAAOA,EAAKC,SAEfF,KAAK,SAASG,GACXA,EAAKC,IAAI,SAAAC,GAAA,OAAUA,EAAOC,KAAO,IAAIC,KAAKF,EAAOC,SACjDX,WAAaQ,GAIRK,QAAQ,SAAAC,GACT,IAAMC,EAAOD,EAAQH,KAAKK,cAC1Bf,UAAUgB,KAAKF,GACfd,UAAAA,GAAAA,OAAAA,mBAAgB,IAAIiB,IAAIjB,eAE5BA,UAAUkB,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAC7BvB,cAAcwB,UACVrB,UAAUQ,IAAI,SAAAM,GAAA,MAAA,iCAAyCA,EAAzC,cAClB,IAAIQ,EAAUzB,cAAc0B,QAAQ1B,cAAc2B,eAAeC,KACjEC,aAAa3B,WAAYuB,GAIzBf,EAAKK,QAAQ,SAAAC,GACT,IAAMc,EAAMd,EAAQe,SACpB3B,SAASe,KAAKW,GACd1B,SAAAA,GAAAA,OAAAA,mBAAe,IAAIgB,IAAIhB,cAE3BH,aAAauB,UAAYpB,SAASO,IAAI,SAACmB,EAAKE,GAAN,MAAA,+GAEmBA,EAFnB,cAEsCA,EAFtC,2DAGIA,EAHJ,KAGcF,EAHd,uDAOtC1B,SAASO,IAAI,SAACmB,EAAKE,GACApC,SAASC,eAAT,QAAgCmC,GACxCC,iBAAiB,QAAS,WAAA,OAAMC,YAAYhC,kBAOnE,SAAS2B,aAAanB,EAAKyB,GAEvBC,WADqB1B,EAAK2B,OAAO,SAAAzB,GAAA,OAAUA,EAAOC,KAAKK,eAAiBiB,KAI5E,SAASD,YAAYxB,EAAKyB,GACtB,IAAMG,EAAelC,SAASiC,OAAO,SAACP,EAAIE,GAAL,OAAepC,SAASC,eAAT,QAAgCmC,GAASO,QAAUT,EAAM,OAE7GM,WADqB1B,EAAK2B,OAAO,SAAAzB,GAAA,OAAUA,EAAOmB,WAAaO,EAAa,IAAO1B,EAAOmB,WAAaO,EAAa,IAAK1B,EAAOmB,WAAaO,EAAa,IAAK1B,EAAOmB,WAAaO,EAAa,MAIpM,SAASE,cAAc9B,EAAKyB,GAExBC,WADqB1B,EAAK2B,OAAO,SAAAzB,GAAA,OAAUA,EAAO6B,MAAMC,SAASP,IAAUvB,EAAO+B,YAAYD,SAASP,MAO3G,SAASC,WAAW1B,GAEhB,IAAIkC,EAAS,GAEblC,EAAKK,QAAQ,SAAAC,GAET,IAAM6B,EAAO7B,EAAQH,KACfiC,EAAcD,EAAKE,WAAa,IAAMF,EAAKG,aAC3CC,EAAeJ,EAAKK,UAAY,IAAML,EAAKM,WAAa,IAAMN,EAAK3B,cAEzE0B,GAAAA,qCAEYK,EAFZ,4BAGYH,EAHZ,gCAIgB9B,EAAQe,SAJxB,+BAMaf,EAAQyB,MANrB,6BAOazB,EAAQ2B,YAPrB,mCAWJhD,KAAK6B,UAAYoB,EAGrBQ,OAAOnB,iBAAiB,OAAQ5B,aAChCN,aAAakC,iBAAiB,QAAS,WAAA,OAAMO,cAActC,WAAYJ,YAAYqC,SACnFnC,cAAciC,iBAAiB,SAAU,WAAA,OAAMoB,QAAQC,UAAIC,GAAK7B,cAAQ6B,GAAK5B,eAAeC","file":"scripts.min.js","sourcesContent":["const list = document.getElementById('list');\r\nconst searchInput = document.getElementById('searchInput');\r\nconst searchButton = document.getElementById('searchButton');\r\nconst yearsSelector = document.getElementById('years');\r\nconst tagsSelector = document.getElementById('tags');\r\n\r\nlet globalData = \"\";\r\nlet yearsList = [];\r\nlet tagsList = [];\r\n\r\n\r\n//Wstępne ładowanie danych z JSON + generowanie szkieletu strony      \r\nfunction fetchData() {\r\n\r\n    fetch('data.json')\r\n        .then(function(resp) {\r\n            return resp.json();\r\n        })\r\n        .then(function(data) {\r\n            data.map(raport => raport.date = new Date(raport.date))\r\n            globalData = data;\r\n\r\n\r\n            // setYears\r\n            data.forEach(element => {\r\n                const year = element.date.getFullYear(); \r\n                yearsList.push(year);\r\n                yearsList = [...new Set(yearsList)];\r\n            })\r\n            yearsList.sort((a, b) => a - b);\r\n            yearsSelector.innerHTML = \r\n                yearsList.map(year => `<option onclick=\"alert(this)\">${year}</option>`);\r\n            let strUser = yearsSelector.options[yearsSelector.selectedIndex].text;\r\n            filterByYear(globalData, strUser)\r\n        \r\n            \r\n            // setTags\r\n            data.forEach(element => {\r\n                const tag = element.category;\r\n                tagsList.push(tag);\r\n                tagsList = [...new Set(tagsList)];\r\n            })\r\n            tagsSelector.innerHTML = tagsList.map((tag, index) => `\r\n                <div class=\"formrow\">\r\n                <input class=\"checkbox\" type=\"checkbox\" name=\"check${index}\" id=\"check${index}\">\r\n                <label class=\"checklabel\" for=\"check${index}\">${tag}</label>\r\n                </div>\r\n                `\r\n            );               \r\n            tagsList.map((tag, index) => {\r\n                const option = document.getElementById(`check${index}`);\r\n                option.addEventListener('click', () => filterByTag(globalData));\r\n            });           \r\n        });\r\n}\r\n\r\n\r\n// Filtrowanie danych z JSONa\r\nfunction filterByYear(data,value){\r\n    const filteredData = data.filter(raport => raport.date.getFullYear() == value );\r\n    renderData(filteredData);\r\n}\r\n\r\nfunction filterByTag(data,value){\r\n    const tagsSelected = tagsList.filter((tag,index) => document.getElementById(`check${index}`).checked ? tag : null);\r\n    const filteredData = data.filter(raport => raport.category === tagsSelected[0] ||  raport.category === tagsSelected[1] ||raport.category === tagsSelected[2] ||raport.category === tagsSelected[3]);\r\n    renderData(filteredData);\r\n}\r\n\r\nfunction filterByChars(data,value){\r\n    const filteredData = data.filter(raport => raport.title.includes(value) || raport.description.includes(value));\r\n    renderData(filteredData);\r\n}\r\n\r\n\r\n\r\n// Renderowanie boxów z raportem\r\nfunction renderData(data){\r\n\r\n    let output = '';\r\n\r\n    data.forEach(element => {  \r\n\r\n        const time = element.date;\r\n        const minutesHour = time.getHours() + ':' + time.getMinutes();\r\n        const dayMonthYear = time.getDate() + '.' + time.getMonth() + '.' + time.getFullYear();\r\n        \r\n        output += `\r\n        <ul>\r\n        <li>Date: ${dayMonthYear}</li>\r\n        <li>Hour: ${minutesHour}</li>\r\n        <li>Category: ${element.category}</li>\r\n\r\n        <li>Title: ${element.title}</li>\r\n        <li>Descr: ${element.description}</li>\r\n        </ul>\r\n        `;\r\n    });\r\n    list.innerHTML = output;\r\n}\r\n\r\nwindow.addEventListener('load', fetchData());\r\nsearchButton.addEventListener('click', () => filterByChars(globalData, searchInput.value));\r\nyearsSelector.addEventListener('change', () => console.log(this.options[this.selectedIndex].text))"]}