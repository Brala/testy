{"version":3,"sources":["script.js"],"names":["list","document","getElementById","searchInput","searchButton","yearsSelector","tagsSelector","globalData","yearsList","tagsList","fetchData","fetch","then","resp","json","data","map","raport","date","Date","renderFiltersForm","filterByAll","value","catch","error","console","year","chars","tags","filteredData","filter","getFullYear","title","includes","description","tagsSelected","tag","index","checked","some","el","category","renderReportsData","forEach","element","push","Set","sort","a","b","innerHTML","selectedIndex","options","length","tagsOutput","addEventListener","reportsOutput","fileTogglersIndex","time","minutesHour","getHours","slice","getMinutes","dayMonthYear","getDate","getMonth","filesOutput","files","file","filename","filesize","attachedFiles","_loop","i","classList","toggle","querySelector","e","preventDefault","window"],"mappings":"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","file":"scripts.min.js","sourcesContent":["const list = document.getElementById(\"list\");\r\nconst searchInput = document.getElementById(\"searchInput\");\r\nconst searchButton = document.getElementById(\"searchButton\");\r\nconst yearsSelector = document.getElementById(\"years\");\r\nconst tagsSelector = document.getElementById(\"tags\");\r\n\r\nlet globalData = [];\r\nlet yearsList = [\"Wszystkie\"];\r\nlet tagsList = [];\r\n\r\n//  stop default form behavior\r\ndocument.getElementById('form').addEventListener('submit', e => e.preventDefault());\r\n\r\n\r\n\r\n//  --------- Wstępne formatowanie danych z JSON  --------- \r\n\r\nfunction fetchData() {\r\n\r\n    fetch(\"data.json\")\r\n        .then(function(resp) {\r\n            return resp.json();\r\n        })\r\n        .then(function(data) {\r\n            //  format unix_timestamp to js Date()\r\n            data.map(raport => raport.date = new Date(raport.date))\r\n            globalData = [...data];           \r\n            \r\n            //  after fetch render search form and initial reports \r\n            renderFiltersForm()\r\n            filterByAll(globalData, yearsSelector.value, searchInput.value)\r\n        })\r\n        .catch(error => console.error(error));\r\n}\r\n\r\n\r\n\r\n//  ---------  Filtrowanie(Przeszukiwanie) danych z JSONa / Filter throught all inputs--------- \r\n\r\nfunction filterByAll( globalData , year , chars , tags ) {\r\n\r\n    let filteredData;\r\n\r\n    //  filter by year\r\n        year !== \"Wszystkie\"\r\n    ?   filteredData = globalData.filter(raport => raport.date.getFullYear() == year )\r\n    :   filteredData = globalData;\r\n\r\n    //  filter by chars\r\n    filteredData = filteredData.filter(raport => raport.title.includes(chars) || raport.description.includes(chars));\r\n    \r\n    //  filter by tags\r\n    const tagsSelected = \r\n    tagsList.filter((tag,index) => document.getElementById(`check${index}`).checked ? tag : null); \r\n        !document.getElementById(`checkAll`).checked\r\n    ?   filteredData = filteredData.filter(raport => tagsSelected.some(el => el === raport.category))\r\n    :   null;\r\n\r\n    renderReportsData(filteredData);\r\n}\r\n\r\n\r\n//  ---------  Generowanie szkieletu formularza/filtrownicy --------- \r\n\r\nfunction renderFiltersForm(){\r\n\r\n    //  set avilable Years from data\r\n    globalData.forEach(element => {\r\n        const year = element.date.getFullYear(); \r\n        yearsList.push(year);\r\n    })\r\n    yearsList = [...new Set(yearsList)];\r\n    yearsList.sort((a, b) => a - b);\r\n\r\n    const yearsArrow = '<i class=\"arrow arrow-down\"></i> '\r\n\r\n    yearsSelector.innerHTML = yearsArrow\r\n        + yearsList.map(year => `<option>${year}</option>`);\r\n\r\n    yearsSelector.selectedIndex = yearsSelector.options.length-1;\r\n\r\n    //  set avilable Tags from data\r\n    globalData.forEach(element => {\r\n        const tag = element.category;\r\n        tagsList.push(tag);\r\n    })\r\n    tagsList = [...new Set(tagsList)];\r\n\r\n    let tagsOutput = \r\n        `\r\n        <div class=\"form--row\">\r\n            <input class=\"checkbox\" type=\"checkbox\" name=\"checkAll\" id=\"checkAll\" checked>\r\n            <label class=\"checklabel\" for=\"checkAll\">Wszystkie <span>&#x2716;</span></label>\r\n        </div>\r\n        `;\r\n\r\n    tagsList.forEach((tag, index) => tagsOutput += \r\n        `\r\n        <div class=\"form--row\">\r\n            <input class=\"checkbox\" type=\"checkbox\" name=\"check${index}\" id=\"check${index}\">\r\n            <label class=\"checklabel\" for=\"check${index}\">${tag}<span>&#x2716;</span></label>\r\n        </div>\r\n        `\r\n    );    \r\n    tagsSelector.innerHTML = tagsOutput;\r\n\r\n    //  Add listeners to tag-elements\r\n    document.getElementById(`checkAll`).addEventListener(\"click\", () => filterByAll(globalData, yearsSelector.value, searchInput.value));\r\n    tagsList.map((tag, index) => {\r\n        const option = document.getElementById(`check${index}`);\r\n        option.addEventListener(\"click\", () => filterByAll(globalData, yearsSelector.value, searchInput.value));\r\n    });   \r\n\r\n}\r\n\r\n\r\n\r\n//  ---------  Generowanie boxów z raportami w <main> --------- \r\nfunction renderReportsData(data){\r\n\r\n    let reportsOutput = \"\";\r\n    let fileTogglersIndex = 0;\r\n\r\n    data.forEach((element, index) => {  \r\n\r\n        const time = element.date;\r\n        const minutesHour = ('0' + time.getHours()).slice(-2) + \":\" + ('0' + time.getMinutes()).slice(-2);\r\n        const dayMonthYear = ('0' + time.getDate()).slice(-2) + \".\" + ('0' + time.getMonth()).slice(-2) + \".\" + time.getFullYear();\r\n        \r\n        let filesOutput = \"\";\r\n\r\n        element.files.forEach(\r\n            file => filesOutput += \r\n                `\r\n                <a>\r\n                    Pobierz ${file.filename}.pdf    (${file.filesize}kB)\r\n                </a>\r\n                `\r\n        );\r\n\r\n        const attachedFiles = \r\n                element.files.length === 0 \r\n            ?   \"\"\r\n            :   element.files.length === 1 \r\n            ?   ` \r\n                <a>\r\n                    Pobierz ${element.files[0].filename}.pdf    (${element.files[0].filesize}kB)\r\n                </a>\r\n                `\r\n            :   ` \r\n                <a class=\"block--raport--files--toggled\" id=\"toggleFiles${fileTogglersIndex}\"}>\r\n                    Pliki do pobrania (${element.files.length})     \r\n                    <i class=\"arrow arrow-down\"></i>\r\n                </a>\r\n                <div class=\"hidden\" id=\"visibleFiles${fileTogglersIndex}\">\r\n                    <hr>\r\n                    ${filesOutput}\r\n                </div>\r\n                `;\r\n        \r\n        element.files.length >= 2 ? fileTogglersIndex++ : null;\r\n\r\n\r\n        reportsOutput += \r\n            `\r\n            <div class=\"block clear-fix\">\r\n                <div class=\"block--date-category f-left\">\r\n                    <p><b>${dayMonthYear}</b></p>\r\n                    <p><b>${minutesHour}</b></p>\r\n                    <p>${element.category}</p>\r\n                </div>\r\n                <div class=\"block--raport f-left\">\r\n                    <h2>${element.title}</h2>\r\n                    <p>${element.description}</p>\r\n                    <div class=\"f-left\">\r\n                        <a>Zobacz raport</a>\r\n                    </div>\r\n                    <div class=\"block--raport--files f-left\">\r\n                        ${attachedFiles}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            `;\r\n    });\r\n\r\n    //  Render raports on page\r\n    reportsOutput === \"\"\r\n    ? list.innerHTML = \"Brak wyników spełniających kryteria\" \r\n    : list.innerHTML = reportsOutput;\r\n\r\n    //  Add listeners to <a>Pliki do pobrania</a>\r\n    for( let i=0 ; i<fileTogglersIndex ; i++ ){\r\n        document.getElementById(`toggleFiles${i}`).addEventListener(\"click\", () => {\r\n            document.getElementById(`visibleFiles${i}`).classList.toggle(\"hidden\");\r\n            document.querySelector(`#toggleFiles${i} i`).classList.toggle(\"arrow-up\");\r\n        });\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener(\"load\", fetchData());\r\nyearsSelector.addEventListener(\"change\", () => filterByAll(globalData, yearsSelector.value, searchInput.value));\r\nsearchButton.addEventListener(\"click\", () => filterByAll(globalData, yearsSelector.value, searchInput.value));\r\n"]}