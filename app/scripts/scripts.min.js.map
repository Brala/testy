{"version":3,"sources":["script.js"],"names":["searchInput","document","getElementById","searchButton","yearsSelector","tagsSelector","globalReportsData","yearsList","tagsList","fetchData","fetch","then","resp","json","data","map","raport","date","Date","renderFiltersForm","filterReportsByAllConditions","value","catch","error","console","year","chars","filteredReportsData","filter","getFullYear","title","includes","description","tagsSelected","tag","index","checked","some","element","category","renderReportsData","forEach","push","Set","sort","a","b","innerHTML","selectedIndex","options","length","tagsOutput","addEventListener","reportsData","reportsRenderedOutput","fileTogglersIndex","report","time","minutesHour","getHours","slice","getMinutes","dayMonthYear","getDate","getMonth","filesOutput","files","file","filename","filesize","attachedFiles","reportsList","log","_loop","i","classList","toggle","querySelector","event","preventDefault","window"],"mappings":"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","file":"scripts.min.js","sourcesContent":["const searchInput = document.getElementById(\"formSearchInput\");\r\nconst searchButton = document.getElementById(\"formSearchButton\");\r\nconst yearsSelector = document.getElementById(\"formYears\");\r\nconst tagsSelector = document.getElementById(\"formTags\");\r\n\r\nlet globalReportsData = [];\r\nlet yearsList = [\"Wszystkie\"];\r\nlet tagsList = [];\r\n\r\n//  stop default form behavior\r\ndocument.getElementById('form').addEventListener('submit', event => event.preventDefault());\r\n\r\n//  --------- Wstępne formatowanie danych z JSON  --------- \r\n\r\nfunction fetchData() {\r\n\r\n    fetch(\"data.json\")\r\n        .then(function(resp) {\r\n            return resp.json();\r\n        })\r\n        .then(function(data) {\r\n            //  format unix_timestamp to js Date()\r\n            data.map(raport => raport.date = new Date(raport.date))\r\n            globalReportsData = [...data];           \r\n            \r\n            //  after fetch render search form and initial reports \r\n            renderFiltersForm()\r\n            filterReportsByAllConditions( yearsSelector.value, searchInput.value )\r\n        })\r\n        .catch(error => console.error(error));\r\n}\r\n\r\n\r\n\r\n\r\n//  ---------  Filtrowanie(Przeszukiwanie) danych z JSONa / Filter throught all inputs--------- \r\n\r\nfunction filterReportsByAllConditions( year , chars ) {\r\n\r\n    let filteredReportsData;\r\n\r\n    //  filter by year\r\n        year !== \"Wszystkie\"\r\n    ?   filteredReportsData = globalReportsData.filter(raport => raport.date.getFullYear() == year )\r\n    :   filteredReportsData = globalReportsData;\r\n\r\n    //  filter by chars\r\n    filteredReportsData = filteredReportsData.filter(raport => raport.title.includes(chars) || raport.description.includes(chars));\r\n    \r\n    //  filter by tags\r\n    const tagsSelected = tagsList.filter((tag,index) => document.getElementById(`check${index}`).checked ? tag : null);\r\n    \r\n        !document.getElementById(`checkAll`).checked\r\n    ?   filteredReportsData = filteredReportsData.filter(raport => tagsSelected.some(element => element === raport.category))\r\n    :   null;\r\n\r\n    renderReportsData(filteredReportsData);\r\n}\r\n\r\n\r\n//  ---------  Generowanie szkieletu formularza/filtrownicy --------- \r\n\r\nfunction renderFiltersForm(){\r\n\r\n    //  set avilable Years from data\r\n    globalReportsData.forEach(element => {\r\n        const year = element.date.getFullYear(); \r\n        yearsList.push(year);\r\n    })\r\n    yearsList = [...new Set(yearsList)];\r\n    yearsList.sort((a, b) => a - b);\r\n\r\n    const yearsArrow = '<i class=\"arrow arrow-down\"></i> '\r\n\r\n    yearsSelector.innerHTML = yearsArrow\r\n        + yearsList.map(year => `<option>${year}</option>`);\r\n\r\n    yearsSelector.selectedIndex = yearsSelector.options.length-1;\r\n\r\n    //  set avilable Tags from data\r\n    globalReportsData.forEach(element => {\r\n        const tag = element.category;\r\n        tagsList.push(tag);\r\n    })\r\n    tagsList = [...new Set(tagsList)];\r\n\r\n    let tagsOutput = \r\n        `\r\n        <div class=\"form--row\">\r\n            <input class=\"checkbox\" type=\"checkbox\" name=\"checkAll\" id=\"checkAll\" checked>\r\n            <label class=\"checklabel\" for=\"checkAll\">Wszystkie <span>&#x2716;</span></label>\r\n        </div>\r\n        `;\r\n\r\n    tagsList.forEach((tag, index) => tagsOutput += \r\n        `\r\n        <div class=\"form--row\">\r\n            <input class=\"checkbox\" type=\"checkbox\" name=\"check${index}\" id=\"check${index}\">\r\n            <label class=\"checklabel\" for=\"check${index}\">${tag}<span>&#x2716;</span></label>\r\n        </div>\r\n        `\r\n    );    \r\n    tagsSelector.innerHTML = tagsOutput;\r\n\r\n    //  Add listeners to tag-elements\r\n    document.getElementById(`checkAll`).addEventListener(\"click\", () => filterReportsByAllConditions( yearsSelector.value, searchInput.value));\r\n    tagsList.map((tag, index) => {\r\n        const option = document.getElementById(`check${index}`);\r\n        option.addEventListener(\"click\", () => filterReportsByAllConditions( yearsSelector.value, searchInput.value));\r\n    });   \r\n\r\n}\r\n\r\n\r\n\r\n//  ---------  Generowanie boxów z raportami w <main> --------- \r\nfunction renderReportsData(reportsData){\r\n\r\n    let reportsRenderedOutput = false;\r\n    let fileTogglersIndex = 0;\r\n\r\n    reportsData.forEach((report, index) => {  \r\n\r\n        const time = report.date;\r\n        const minutesHour = ('0' + time.getHours()).slice(-2) + \":\" + ('0' + time.getMinutes()).slice(-2);\r\n        const dayMonthYear = ('0' + time.getDate()).slice(-2) + \".\" + ('0' + time.getMonth()).slice(-2) + \".\" + time.getFullYear();\r\n        \r\n        let filesOutput = \"\";\r\n\r\n        report.files.forEach(\r\n            file => filesOutput += \r\n                `\r\n                <a>\r\n                    Pobierz ${file.filename}.pdf    (${file.filesize}kB)\r\n                </a>\r\n                `\r\n        );\r\n\r\n        const attachedFiles = \r\n                report.files.length === 0 \r\n            ?   \"\"\r\n            :   report.files.length === 1 \r\n            ?   ` \r\n                <a>\r\n                    Pobierz ${report.files[0].filename}.pdf    (${report.files[0].filesize}kB)\r\n                </a>\r\n                `\r\n            :   ` \r\n                <a class=\"block--raport--files--toggled\" id=\"toggleFiles${fileTogglersIndex}\"}>\r\n                    Pliki do pobrania (${report.files.length})     \r\n                    <i class=\"arrow arrow-down\"></i>\r\n                </a>\r\n                <div class=\"hidden\" id=\"visibleFiles${fileTogglersIndex}\">\r\n                    <hr>\r\n                    ${filesOutput}\r\n                </div>\r\n                `;\r\n        \r\n        report.files.length >= 2 ? fileTogglersIndex++ : null;\r\n\r\n\r\n        reportsRenderedOutput += \r\n            `\r\n            <div class=\"block clear-fix\">\r\n                <div class=\"block--date-category f-left\">\r\n                    <p><b>${dayMonthYear}</b></p>\r\n                    <p><b>${minutesHour}</b></p>\r\n                    <p>${report.category}</p>\r\n                </div>\r\n                <div class=\"block--raport f-left\">\r\n                    <h2>${report.title}</h2>\r\n                    <p>${report.description}</p>\r\n                    <div class=\"f-left\">\r\n                        <a>Zobacz raport</a>\r\n                    </div>\r\n                    <div class=\"block--raport--files f-left\">\r\n                        ${attachedFiles}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            `;\r\n    });\r\n\r\n    //  Render raports on page\r\n    const reportsList = document.getElementById(\"reportsList\");\r\n    // reportsRenderedOutput === \"\"\r\n    // ? reportsList.innerHTML = \"Brak wyników spełniających kryteria\" \r\n    // : reportsList.innerHTML = reportsRenderedOutput || \"Brak wyników spełniających kryteria\";\r\n    console.log(reportsRenderedOutput);\r\n    \r\n    reportsList.innerHTML = reportsRenderedOutput || \"Brak wyników spełniających kryteria\";\r\n\r\n    //  Add listeners to <a>Pliki do pobrania</a>\r\n    for( let i=0 ; i<fileTogglersIndex ; i++ ){\r\n        document.getElementById(`toggleFiles${i}`).addEventListener(\"click\", () => {\r\n            document.getElementById(`visibleFiles${i}`).classList.toggle(\"hidden\");\r\n            document.querySelector(`#toggleFiles${i} i`).classList.toggle(\"arrow-up\");\r\n        });\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener(\"load\", fetchData());\r\nyearsSelector.addEventListener(\"change\", () => filterReportsByAllConditions( yearsSelector.value, searchInput.value));\r\nsearchButton.addEventListener(\"click\", () => filterReportsByAllConditions( yearsSelector.value, searchInput.value));\r\n"]}