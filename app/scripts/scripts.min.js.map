{"version":3,"sources":["script.js"],"names":["list","document","getElementById","searchInput","searchButton","yearsSelector","tagsSelector","globalData","yearsList","tagsList","form","fetchData","fetch","then","resp","json","data","map","raport","date","Date","renderFiltersForm","filterAll","value","year","chars","tags","filteredData","filter","getFullYear","title","includes","description","tagsSelected","tag","index","checked","some","el","category","renderReportsData","forEach","element","push","Set","sort","a","b","innerHTML","selectedIndex","options","length","text","tagsOutput","addEventListener","reportsOutput","filesToggleIndex","time","minutesHour","getHours","slice","getMinutes","dayMonthYear","getDate","getMonth","filesOutput","files","file","filename","filesize","attachedFiles","_loop","i","classList","toggle","querySelector","e","preventDefault","window"],"mappings":"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","file":"scripts.min.js","sourcesContent":["const list = document.getElementById(\"list\");\r\nconst searchInput = document.getElementById(\"searchInput\");\r\nconst searchButton = document.getElementById(\"searchButton\");\r\nconst yearsSelector = document.getElementById(\"years\");\r\nconst tagsSelector = document.getElementById(\"tags\");\r\n\r\nlet globalData = [];\r\nlet yearsList = [\"Wszystkie\"];\r\nlet tagsList = [];\r\n\r\n//  stop default form behavior\r\nconst form = document.getElementById('form');\r\nform.addEventListener('submit', e => e.preventDefault());\r\n\r\n\r\n//  --------- Wstępne formatowanie danych z JSON + generowanie szkieletu Filtrownicy  --------- \r\n\r\nfunction fetchData() {\r\n\r\n    fetch(\"data.json\")\r\n        .then(function(resp) {\r\n            return resp.json();\r\n        })\r\n        .then(function(data) {\r\n//  format unix_timestamp to js Date()\r\n            data.map(raport => raport.date = new Date(raport.date))\r\n            globalData = data;           \r\n            \r\n//  window.onload start search form and initial reports \r\n            renderFiltersForm()\r\n            filterAll(globalData, yearsSelector.value, searchInput.value)\r\n        });\r\n\r\n}\r\n\r\n\r\n\r\n//  ---------  Filtrowanie(Przeszukiwanie) danych z JSONa / Filter throught all inputs--------- \r\n\r\nfunction filterAll( globalData , year , chars , tags ) {\r\n\r\n    let filteredData;\r\n\r\n//  filter by year\r\n    year !== \"Wszystkie\"\r\n    ?   filteredData = globalData.filter(raport => raport.date.getFullYear() == year )\r\n    :   filteredData = globalData;\r\n\r\n//  filter by chars\r\n    filteredData = filteredData.filter(raport => raport.title.includes(chars) || raport.description.includes(chars));\r\n    \r\n//  filter by tags\r\n    const tagsSelected = tagsList.filter((tag,index) => document.getElementById(`check${index}`).checked ? tag : null); \r\n    !   document.getElementById(`checkAll`).checked\r\n    ?   filteredData = filteredData.filter(raport => tagsSelected.some(el => el === raport.category))\r\n    :   null;\r\n\r\n    renderReportsData(filteredData);\r\n\r\n}\r\n\r\n\r\n//  ---------  Generowanie formularza filtrownicy --------- \r\nfunction renderFiltersForm(){\r\n\r\n//  setYears\r\n    globalData.forEach(element => {\r\n        const year = element.date.getFullYear(); \r\n        yearsList.push(year);\r\n        yearsList = [...new Set(yearsList)];\r\n    })\r\n    yearsList.sort((a, b) => a - b);\r\n    const yearsArrow = '<i class=\"arrow arrow-down\"></i> '\r\n    yearsSelector.innerHTML = yearsArrow\r\n    + yearsList.map(year => `<option>${year}</option>`);\r\n\r\n    yearsSelector.selectedIndex = yearsSelector.options.length-1;\r\n    let strUser = yearsSelector.options[yearsSelector.selectedIndex].text;\r\n\r\n//  setTags\r\n    globalData.forEach(element => {\r\n        const tag = element.category;\r\n        tagsList.push(tag);\r\n        tagsList = [...new Set(tagsList)];\r\n    })\r\n\r\n    let tagsOutput = `\r\n        <div class=\"form--row\">\r\n            <input class=\"checkbox\" type=\"checkbox\" name=\"checkAll\" id=\"checkAll\" checked>\r\n            <label class=\"checklabel\" for=\"checkAll\">Wszystkie <span>&#x2716;</span></label>\r\n        </div>\r\n    `;\r\n\r\n    tagsList.forEach((tag, index) => tagsOutput += `\r\n        <div class=\"form--row\">\r\n            <input class=\"checkbox\" type=\"checkbox\" name=\"check${index}\" id=\"check${index}\">\r\n            <label class=\"checklabel\" for=\"check${index}\">${tag}<span>&#x2716;</span></label>\r\n        </div>\r\n        `\r\n    );    \r\n    tagsSelector.innerHTML = tagsOutput;\r\n\r\n//  Add listeners to tag-elements\r\n    document.getElementById(`checkAll`).addEventListener(\"click\", () => filterAll(globalData, yearsSelector.value, searchInput.value));\r\n    tagsList.map((tag, index) => {\r\n        const option = document.getElementById(`check${index}`);\r\n        option.addEventListener(\"click\", () => filterAll(globalData, yearsSelector.value, searchInput.value));\r\n    });   \r\n\r\n}\r\n\r\n\r\n\r\n//  ---------  Generowanie boxów z raportami w <main> --------- \r\nfunction renderReportsData(data){\r\n\r\n    let reportsOutput = \"\";\r\n    let filesToggleIndex = 0;\r\n\r\n    data.forEach((element, index) => {  \r\n\r\n        const time = element.date;\r\n        const minutesHour = ('0' + time.getHours()).slice(-2) + \":\" + ('0' + time.getMinutes()).slice(-2);\r\n        const dayMonthYear = ('0' + time.getDate()).slice(-2) + \".\" + ('0' + time.getMonth()).slice(-2) + \".\" + time.getFullYear();\r\n        \r\n        let filesOutput = \"\";\r\n\r\n        element.files.forEach(\r\n            file => filesOutput += `\r\n                <a>\r\n                    Pobierz ${file.filename}.pdf    (${file.filesize}kB)\r\n                </a>`\r\n        );\r\n\r\n        const attachedFiles = \r\n            element.files.length === 0 \r\n            ?   \"\"\r\n            :   element.files.length === 1 \r\n            ?   ` <a>\r\n                    Pobierz ${element.files[0].filename}.pdf    (${element.files[0].filesize}kB)\r\n                </a>`\r\n            :   ` <a class=\"block--raport--files--toggled\" id=\"toggleFiles${filesToggleIndex}\"}>\r\n                    Pliki do pobrania (${element.files.length})     \r\n                    <i class=\"arrow arrow-down\"></i>\r\n                </a>\r\n                <div class=\"hidden\" id=\"visibleFiles${filesToggleIndex}\">\r\n                    <hr>\r\n                    ${filesOutput}\r\n                </div>`;\r\n        \r\n        element.files.length >= 2 ? filesToggleIndex++ : null;\r\n\r\n\r\n        reportsOutput += `\r\n            <div class=\"block clear-fix\">\r\n                <div class=\"block--date-category f-left\">\r\n                    <p><b>${dayMonthYear}</b></p>\r\n                    <p><b>${minutesHour}</b></p>\r\n                    <p>${element.category}</p>\r\n                </div>\r\n                <div class=\"block--raport f-left\">\r\n                    <h2>${element.title}</h2>\r\n                    <p>${element.description}</p>\r\n                    <div class=\"f-left\">\r\n                        <a>Zobacz raport</a>\r\n                    </div>\r\n                    <div class=\"block--raport--files f-left\">\r\n                        ${attachedFiles}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    });\r\n\r\n//  Wstawienie raportow na strone\r\n    reportsOutput === \"\"\r\n    ? list.innerHTML = \"Brak wyników spełniających kryteria\" \r\n    : list.innerHTML = reportsOutput;\r\n\r\n//  Dodawanie click-listenerów do \"Pliki do pobrania\"\r\n    for( let i=0 ; i<filesToggleIndex ; i++ ){\r\n        document.getElementById(`toggleFiles${i}`).addEventListener(\"click\", () => {\r\n            document.getElementById(`visibleFiles${i}`).classList.toggle(\"hidden\");\r\n            document.querySelector(`#toggleFiles${i} i`).classList.toggle(\"arrow-up\");\r\n        });\r\n    }\r\n\r\n}\r\n\r\nwindow.addEventListener(\"load\", fetchData());\r\nyearsSelector.addEventListener(\"change\", () => filterAll(globalData, yearsSelector.value, searchInput.value));\r\nsearchButton.addEventListener(\"click\", () => filterAll(globalData, yearsSelector.value, searchInput.value));\r\n"]}