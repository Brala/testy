{"version":3,"sources":["script.js"],"names":["list","document","getElementById","searchInput","searchButton","yearsSelector","tagsSelector","globalData","yearsList","tagsList","fetchData","fetch","then","resp","json","data","map","raport","date","Date","forEach","element","year","getFullYear","push","Set","sort","a","b","innerHTML","selectedIndex","options","length","strUser","text","filterByYear","tag","category","output","index","addEventListener","filterByTag","value","renderData","filter","tagsSelected","checked","filterByChars","title","includes","description","filesToggleIndex","time","minutesHour","getHours","slice","getMinutes","dayMonthYear","getDate","getMonth","filesOutput","files","file","filename","filesize","attachedFiles","_loop","i","classList","toggle","window"],"mappings":"sJAAA,IAAMA,KAAOC,SAASC,eAAe,QAC/BC,YAAcF,SAASC,eAAe,eACtCE,aAAeH,SAASC,eAAe,gBACvCG,cAAgBJ,SAASC,eAAe,SACxCI,aAAeL,SAASC,eAAe,QAEzCK,WAAa,GACbC,UAAY,GACZC,SAAW,GAIf,SAASC,YAELC,MAAM,aACDC,KAAK,SAASC,GACX,OAAOA,EAAKC,SAEfF,KAAK,SAASG,GAEXA,EAAKC,IAAI,SAAAC,GAAA,OAAUA,EAAOC,KAAO,IAAIC,KAAKF,EAAOC,SACjDX,WAAaQ,GAIRK,QAAQ,SAAAC,GACT,IAAMC,EAAOD,EAAQH,KAAKK,cAC1Bf,UAAUgB,KAAKF,GACfd,UAAAA,GAAAA,OAAAA,mBAAgB,IAAIiB,IAAIjB,eAE5BA,UAAUkB,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAC7BvB,cAAcwB,UACVrB,UAAUQ,IAAI,SAAAM,GAAA,MAAA,WAAmBA,EAAnB,cAClBjB,cAAcyB,cAAgBzB,cAAc0B,QAAQC,OAAO,EAC3D,IAAIC,EAAU5B,cAAc0B,QAAQ1B,cAAcyB,eAAeI,KACjEC,aAAa5B,WAAY0B,GAIzBlB,EAAKK,QAAQ,SAAAC,GACT,IAAMe,EAAMf,EAAQgB,SACpB5B,SAASe,KAAKY,GACd3B,SAAAA,GAAAA,OAAAA,mBAAe,IAAIgB,IAAIhB,cAE3B,IAAI6B,EAAS,GAEb7B,SAASW,QAAQ,SAACgB,EAAKG,GAAN,OAAgBD,GAAAA,mHAE4BC,EAF5B,cAE+CA,EAF/C,+DAGaA,EAHb,KAGuBH,EAHvB,uDAOjC9B,aAAauB,UAAYS,EACzB7B,SAASO,IAAI,SAACoB,EAAKG,GACAtC,SAASC,eAAT,QAAgCqC,GACxCC,iBAAiB,QAAS,WAAA,OAAMC,YAAYlC,kBAOnE,SAAS4B,aAAapB,EAAK2B,GAEvBC,WADqB5B,EAAK6B,OAAO,SAAA3B,GAAA,OAAUA,EAAOC,KAAKK,eAAiBmB,KAI5E,SAASD,YAAY1B,EAAK2B,GACtB,IAAMG,EAAepC,SAASmC,OAAO,SAACR,EAAIG,GAAL,OAAetC,SAASC,eAAT,QAAgCqC,GAASO,QAAUV,EAAM,OAE7GO,WADqB5B,EAAK6B,OAAO,SAAA3B,GAAA,OAAUA,EAAOoB,WAAaQ,EAAa,IAAO5B,EAAOoB,WAAaQ,EAAa,IAAK5B,EAAOoB,WAAaQ,EAAa,IAAK5B,EAAOoB,WAAaQ,EAAa,MAIpM,SAASE,cAAchC,EAAK2B,GAExBC,WADqB5B,EAAK6B,OAAO,SAAA3B,GAAA,OAAUA,EAAO+B,MAAMC,SAASP,IAAUzB,EAAOiC,YAAYD,SAASP,MAO3G,SAASC,WAAW5B,GAEhB,IAAIuB,EAAS,GACTa,EAAmB,EAEvBpC,EAAKK,QAAQ,SAACC,EAASkB,GAEnB,IAAMa,EAAO/B,EAAQH,KACfmC,GAAe,IAAMD,EAAKE,YAAYC,OAAO,GAAK,KAAO,IAAMH,EAAKI,cAAcD,OAAO,GACzFE,GAAgB,IAAML,EAAKM,WAAWH,OAAO,GAAK,KAAO,IAAMH,EAAKO,YAAYJ,OAAO,GAAK,IAAMH,EAAK7B,cAEzGqC,EAAc,GAElBvC,EAAQwC,MAAMzC,QACV,SAAA0C,GAAA,OAAQF,GAAAA,sDAEUE,EAAKC,SAFf,YAEmCD,EAAKE,SAFxC,8BAMZ,IAAMC,EACuB,IAAzB5C,EAAQwC,MAAM7B,OACZ,GACyB,IAAzBX,EAAQwC,MAAM7B,OAAd,qCAEgBX,EAAQwC,MAAM,GAAGE,SAFjC,YAEqD1C,EAAQwC,MAAM,GAAGG,SAFtE,4BAAA,sBAIsBb,EAJtB,8CAK0B9B,EAAQwC,MAAM7B,OALxC,2IAQwCmB,EARxC,2BASQS,EATR,2BAYkB,GAAxBvC,EAAQwC,MAAM7B,QAAcmB,IAG5Bb,GAAAA,yHAGiBmB,EAHjB,gCAIiBJ,EAJjB,gCAKiBhC,EAAQgB,SALzB,sGAQkBhB,EAAQ2B,MAR1B,iCASiB3B,EAAQ6B,YATzB,+LAckBe,EAdlB,uFAsBFjE,KAAK6B,UADI,KAAXS,EACmB,sCACAA,EAGnB,IAhEqB,IAAA4B,EAAA,SAgEZC,GACLlE,SAASC,eAAT,cAAsCiE,GAAK3B,iBAAiB,QAAS,WACjEvC,SAASC,eAAT,eAAuCiE,GAAKC,UAAUC,OAAO,aAF5DF,EAAE,EAAIA,EAAEhB,EAAmBgB,IAAKD,EAAhCC,GAObG,OAAO9B,iBAAiB,OAAQ9B,aAChCN,aAAaoC,iBAAiB,QAAS,WAAA,OAAMO,cAAcxC,WAAYJ,YAAYuC,SACnFrC,cAAcmC,iBAAiB,SAAU,WAAA,OAAML,aAAa5B,WAAYF,cAAcqC","file":"scripts.min.js","sourcesContent":["const list = document.getElementById(\"list\");\r\nconst searchInput = document.getElementById(\"searchInput\");\r\nconst searchButton = document.getElementById(\"searchButton\");\r\nconst yearsSelector = document.getElementById(\"years\");\r\nconst tagsSelector = document.getElementById(\"tags\");\r\n\r\nlet globalData = \"\";\r\nlet yearsList = [];\r\nlet tagsList = [];\r\n\r\n\r\n// --------- Wstępne formatowanie danych z JSON + generowanie szkieletu Filtrownicy  --------- \r\nfunction fetchData() {\r\n\r\n    fetch(\"data.json\")\r\n        .then(function(resp) {\r\n            return resp.json();\r\n        })\r\n        .then(function(data) {\r\n            // format unix_timestamp to js Date()\r\n            data.map(raport => raport.date = new Date(raport.date))\r\n            globalData = data;\r\n\r\n\r\n            // setYears\r\n            data.forEach(element => {\r\n                const year = element.date.getFullYear(); \r\n                yearsList.push(year);\r\n                yearsList = [...new Set(yearsList)];\r\n            })\r\n            yearsList.sort((a, b) => a - b);\r\n            yearsSelector.innerHTML = \r\n                yearsList.map(year => `<option>${year}</option>`);\r\n            yearsSelector.selectedIndex = yearsSelector.options.length-1;\r\n            let strUser = yearsSelector.options[yearsSelector.selectedIndex].text;\r\n            filterByYear(globalData, strUser)\r\n        \r\n            \r\n            // setTags\r\n            data.forEach(element => {\r\n                const tag = element.category;\r\n                tagsList.push(tag);\r\n                tagsList = [...new Set(tagsList)];\r\n            })\r\n            let output = \"\";\r\n\r\n            tagsList.forEach((tag, index) => output += `\r\n                <div class=\"formrow\">\r\n                    <input class=\"checkbox\" type=\"checkbox\" name=\"check${index}\" id=\"check${index}\">\r\n                    <label class=\"checklabel\" for=\"check${index}\">${tag}</label>\r\n                </div>\r\n                `\r\n            );    \r\n            tagsSelector.innerHTML = output;           \r\n            tagsList.map((tag, index) => {\r\n                const option = document.getElementById(`check${index}`);\r\n                option.addEventListener(\"click\", () => filterByTag(globalData));\r\n            });           \r\n        });\r\n}\r\n\r\n\r\n// ---------  Filtrowanie(Przeszukiwanie) danych z JSONa --------- \r\nfunction filterByYear(data,value){\r\n    const filteredData = data.filter(raport => raport.date.getFullYear() == value );\r\n    renderData(filteredData);\r\n}\r\n\r\nfunction filterByTag(data,value){\r\n    const tagsSelected = tagsList.filter((tag,index) => document.getElementById(`check${index}`).checked ? tag : null);\r\n    const filteredData = data.filter(raport => raport.category === tagsSelected[0] ||  raport.category === tagsSelected[1] ||raport.category === tagsSelected[2] ||raport.category === tagsSelected[3]);\r\n    renderData(filteredData);\r\n}\r\n\r\nfunction filterByChars(data,value){\r\n    const filteredData = data.filter(raport => raport.title.includes(value) || raport.description.includes(value));\r\n    renderData(filteredData);\r\n}\r\n\r\n\r\n\r\n// ---------  Generowanie boxów z raportami w <main> --------- \r\nfunction renderData(data){\r\n\r\n    let output = \"\";\r\n    let filesToggleIndex = 0;\r\n\r\n    data.forEach((element, index) => {  \r\n\r\n        const time = element.date;\r\n        const minutesHour = ('0' + time.getHours()).slice(-2) + \":\" + ('0' + time.getMinutes()).slice(-2);\r\n        const dayMonthYear = ('0' + time.getDate()).slice(-2) + \".\" + ('0' + time.getMonth()).slice(-2) + \".\" + time.getFullYear();\r\n        \r\n        let filesOutput = \"\";\r\n\r\n        element.files.forEach(\r\n            file => filesOutput += `\r\n                <a>\r\n                    Pobierz ${file.filename}.pdf    (${file.filesize}kB)\r\n                </a>`\r\n        );\r\n\r\n        const attachedFiles = \r\n            element.files.length === 0 \r\n            ? \"\"\r\n            : element.files.length === 1 \r\n            ? ` <a>\r\n                    Pobierz ${element.files[0].filename}.pdf    (${element.files[0].filesize}kB)\r\n                </a>`\r\n            : ` <a id=\"toggleFiles${filesToggleIndex}\"}>\r\n                    Pliki do pobrania(${element.files.length})     <i class=\"arrow arrow-down\"></i>\r\n                </a>\r\n                <hr>\r\n                <div class=\"hidden\" id=\"visibleFiles${filesToggleIndex}\">\r\n                    ${filesOutput}\r\n                </div>`;\r\n        \r\n        element.files.length >= 2 ? filesToggleIndex++ : null;\r\n\r\n\r\n        output += `\r\n            <div class=\"block clear-fix\">\r\n                <div class=\"raport-info f-left\">\r\n                    <p>${dayMonthYear}</p>\r\n                    <p>${minutesHour}</p>\r\n                    <p>${element.category}</p>\r\n                </div>\r\n                <div class=\"raport f-left\">\r\n                    <h2>${element.title}</h2>\r\n                    <p>${element.description}</p>\r\n                    <div class=\"f-left\">\r\n                        <a>Zobacz raport</a>\r\n                    </div>\r\n                    <div class=\"f-left\">\r\n                        ${attachedFiles}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n    });\r\n    // Renderowanie treści\r\n    output === \"\"\r\n    ? list.innerHTML = \"Brak wyników spełniających kryteria\" \r\n    : list.innerHTML = output;\r\n\r\n    // Dodawanie click-listenerów do \"Pliki do pobrania\"\r\n    for( let i=0 ; i<filesToggleIndex ; i++ ){\r\n        document.getElementById(`toggleFiles${i}`).addEventListener(\"click\", () => {\r\n            document.getElementById(`visibleFiles${i}`).classList.toggle(\"hidden\")\r\n        });\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", fetchData());\r\nsearchButton.addEventListener(\"click\", () => filterByChars(globalData, searchInput.value));\r\nyearsSelector.addEventListener(\"change\", () => filterByYear(globalData, yearsSelector.value))\r\n"]}