// Load Fonts
@import url('https://fonts.googleapis.com/css?family=Roboto');

// Global Variables
$background: #f2f2f2;
$white: #ffffff;
$accent-blue: #65c1d4;
$tag-checked: #f7fcfd;
$font-main: #000000;
$font-form: #9b9b9b;

// RWD Breakpoints
$breakpoints: (
  'small':  ( max-width:  767px ),
  'medium': ( max-width:  992px ),
  'large':  ( max-width: 1200px )
) !default;
@mixin respond-to($breakpoint) {
	// If the key exists in the map
	@if map-has-key($breakpoints, $breakpoint) {
	  // Prints a media query based on the value
	  @media #{inspect(map-get($breakpoints, $breakpoint))} {
		@content;
	  }
	}  
	// If the key doesn't exist in the map
	@else {
	  @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
		  + "Available breakpoints are: #{map-keys($breakpoints)}.";
	}
  }

// Global Mixins
@mixin default-section {
	background-color: $white;
	margin: 30px 65px;
	padding: 55px 70px;

	@include respond-to('large') {
		margin: 30px 0;
	  }
	@include respond-to('medium') {
		padding: 10px 10px;
	}
}

@mixin filter-inputs {	
	height: 82px;
	padding-left: 35px;
	font-size: 24px;
	border: none;  
	border-bottom: 2px solid black;  
	box-shadow: 0px 0px 10px 0px rgba(0,0,0,0.07);

	@include respond-to('large') {
		height: 62px;
		font-size: 20px;
	  }

}

html {
	overflow-y: auto;
	width: 100vw;
}
body {
	font-family: 'Roboto', sans-serif;
	color: $font-main;
	background-color: $background;
}

.f-left{
	float: left;
}
.f-right{
	float: right;
}
.clear-fix:after {
	content: "";
	display: table;
	clear: both;
}


.arrow {
	border: solid $accent-blue;
	border-width: 0 2px 2px 0;
	display: inline-block;
	padding: 5px;
	
	&-down {
		transform: rotate(45deg);
		position: absolute;
		right: 65px;
		top: 2px;

		&.arrow-up {
			transform: rotate(-135deg);
			top: 9px;
		}
	}
}